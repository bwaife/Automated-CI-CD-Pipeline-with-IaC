---
- name: Configure web server
  hosts: all
  become: true
  vars:
    java_home: /usr/lib/jvm/java-11-amazon-corretto
  
  tasks:
    # System Updates
    - name: Update system packages
      shell: yum update -y

    # Java Installation
    - name: Install Java 17
      shell: yum install -y java-17-amazon-corretto java-17-amazon-corretto-devel

    - name: Set JAVA_HOME
      lineinfile:
        path: /etc/environment
        line: 'JAVA_HOME={{ java_home }}'
        create: yes

    # Jenkins Installation
    - name: Add Jenkins repository
      shell: |
        yum install -y wget
        wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat-stable/jenkins.repo
        rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key

    - name: Install Jenkins
      shell: yum install -y jenkins

    - name: Start and enable Jenkins
      systemd:
        name: jenkins
        state: started
        enabled: yes

    # Docker Installation
    - name: Install Docker
      shell: yum install -y docker

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    # Web Server
    - name: Install Nginx
      shell: yum install -y nginx

    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes

    # User Management
    - name: Create deploy user
      user:
        name: deploy
        groups: 
          - wheel
          - docker
        append: yes

    - name: Add Jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    # Essential Tools
    - name: Install Git
      shell: yum install -y git

    # Security Hardening
    - name: Secure SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
      notify: restart_ssh

    # Information Display
    - name: Get Jenkins initial password
      slurp:
        src: /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      ignore_errors: yes

    - name: Display access information
      debug:
        msg:
          - "Setup complete!"
          - "Jenkins: http://{{ ansible_default_ipv4.address }}:8080"
          - "Initial Jenkins password: {{ jenkins_password.content | b64decode | trim if jenkins_password.content is defined else 'Check /var/lib/jenkins/secrets/initialAdminPassword' }}"

  handlers:
    - name: restart_ssh
      systemd:
        name: sshd
        state: restarted